{"version":3,"sources":["routes/About.js","component/Movie.js","routes/Home.js","component/Navigation.js","component/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","title","year","summary","poster","genres","to","pathname","state","src","alt","style","backgroundColor","map","genre","idx","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","Detail","getMovieDetail","location","alert","history","push","undefined","rowSpan","rating","download_count","colSpan","description_full","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7be74c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props){\r\n    console.log(props)\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"시작이 느리기 때문에 더열심히 해야해\"\r\n            </span>\r\n            <span>\r\n                20201229\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({id,title,year,summary,poster,genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n        <Link to={{\r\n            pathname:'/movie-detail',\r\n            state :{id}\r\n        }}>\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie__data\">\r\n             <h3 className = \"movie__title\" style ={{backgroundColor:'red'}}>{title}</h3>\r\n            <h5 className = \"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map((genre,idx)=>{\r\n                    return <li key = {idx} className=\"movie__genre\">{genre}</li>\r\n                    }\r\n                )}\r\n            </ul>\r\n            <p className = \"movie__summary\">{summary.slice(0,180)}...</p>\r\n        </div>\r\n        </Link>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired\r\n    , year : PropTypes.number.isRequired\r\n    , title : PropTypes.string.isRequired\r\n    , summary : PropTypes.string.isRequired\r\n    , poster : PropTypes.string.isRequired\r\n    , genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../component/Movie';\r\nimport './Home.css';\r\n\r\n//클래스형 컴포넌트 작성하기\r\nclass Home extends React.Component{ //이게 기본 뼈대임\r\n  state ={\r\n    isLoading : true,\r\n    movies:[],\r\n  }\r\n\r\n  getMovies = async () =>{ //자바스크립트에서 getMovies() 함수는 시간이 필요하고\r\n    //async는 getMovie함수가 비동기라고 선언하는것.\r\n    //즉 이작업이 끝나기 전에 다음으로 넘어가지 않도록 기다리는 것이라고 보면 됨\r\n\r\n    \r\n    //axios의 get()의 실행을 기다려줌\r\n    //즉 여기서 axios의 get의 작업이 끝나길 기다림(await) 한다고 보면 됨\r\n    \r\n    const { \r\n      data :{\r\n        data :{\r\n          movies\r\n        }\r\n      }\r\n     } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    //this.setState({movies : movies});\r\n    //ES6에서는 변수와 키가 같다면 코드 축약 가능\r\n    this.setState({movies, isLoading:false});\r\n  } \r\n\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  componentWillUnmount(){\r\n    console.log(\"Home Unmount\")\r\n  }\r\n\r\n  render(){\r\n    const {isLoading , movies} = this.state;\r\n    return <section className=\"container\" >\r\n      {isLoading ? (<div className=\"loader\" >\r\n        <span className=\"loader__text\">Loading...</span>\r\n      </div>)\r\n      :(\r\n        <div className=\"movies\">\r\n          {movies.map(movie=>(\r\n            <Movie \r\n              key = {movie.id}\r\n              id = {movie.id}\r\n              year = {movie.year}\r\n              title = {movie.title}\r\n              summary = {movie.summary}\r\n              poster = {movie.medium_cover_image}\r\n              genres = {movie.genres}\r\n            />\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n      \r\n      </section>\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation(){\r\n    return(\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to='/about'>About</Link>\r\n            {/* route props에 값을 담아 보내는 방법 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Detail.css';\r\n\r\nclass Detail extends React.Component{\r\n    state = {\r\n        isLoading : true,\r\n        id: 0,\r\n        movie:[],\r\n    }\r\n      getMovieDetail = async () =>{ \r\n        const {location} = this.props;\r\n        const { \r\n            data :{\r\n                data:{\r\n                    movie\r\n                }\r\n            }\r\n         } = await axios.get('https://yts-proxy.now.sh/movie_details.json?movie_id='+location.state.id);\r\n        //ES6에서는 변수와 키가 같다면 코드 축약 가능\r\n        if(movie){\r\n            this.setState({movie, isLoading:false});\r\n        }else{\r\n            alert(\"상세정보를 찾을수 없습니다.\");\r\n            this.props.history.push(\"/\");\r\n        }\r\n      } \r\n\r\n\r\n    componentDidMount(){\r\n        const {location,history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push('/');\r\n        }else{\r\n            this.getMovieDetail();\r\n        }\r\n    }\r\n    render(){\r\n        const {location} = this.props;\r\n        const {isLoading , movie} = this.state;\r\n        if(location.state){\r\n            return (<section className = \"container\">\r\n                    {isLoading ? (<div className=\"loader\" >\r\n                                    <span className=\"loader__text\">Loading...</span>\r\n                                </div>) : \r\n                            (<div className=\"movie_detail\">\r\n                                <table>\r\n                                    <tr>\r\n                                        <td rowSpan=\"6\"><img src={movie.medium_cover_image} alt={movie.title}/></td>\r\n                                        <td>title</td>\r\n                                        <td>{movie.title}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>year</td>\r\n                                        <td>{movie.year}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>genres</td>\r\n                                        <td>{movie.genres.map((genre,idx)=>{return <span key={idx}>{genre} </span>})}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>rating</td>\r\n                                        <td>{movie.rating}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>year</td>\r\n                                        <td>{movie.year}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Download Count</td>\r\n                                        <td>{movie.download_count}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td >Description</td>\r\n                                        <td colSpan=\"2\">{movie.description_full}</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>)\r\n                                }\r\n                </section>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport \"./App.css\";\nimport {HashRouter,Route} from 'react-router-dom';\n//라우터 기능 임포트\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './component/Navigation';\nimport Detail from './component/Detail';\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation/>\n      {/* Link Router 컴포넌트는 반드시 HashRoute안에 있어야한다. */}\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/movie-detail\" exact={true} component={Detail}/>\n      {/* Route에는 2가지 props를 전달할수 있는데 URL PATH, URL에 맞는 컴포넌트를 불러주기 위한 component props \n      path,component props를 통해 사용자가 접속한 URL을 보고 그에 맞는 컴포넌트를 화면에 그림\n      Url/about으로 오게 되면 해당 컴포넌트로서 About을 호출한다고 봄\n      */}\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App /> , document.getElementById('root') );\n"],"sourceRoot":""}